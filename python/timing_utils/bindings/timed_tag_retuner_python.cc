/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(timed_tag_retuner.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(8c0fe40eb6dfb0837b3b44d68062fbdb)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/timing_utils/timed_tag_retuner.h>
// pydoc.h is automatically generated in the build directory
#include <timed_tag_retuner_pydoc.h>

void bind_timed_tag_retuner(py::module& m)
{

    using timed_tag_retuner = ::gr::timing_utils::timed_tag_retuner;


    py::class_<timed_tag_retuner,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<timed_tag_retuner>>(
        m, "timed_tag_retuner", D(timed_tag_retuner))

        .def(py::init(&timed_tag_retuner::make),
             py::arg("sample_rate"),
             py::arg("dict_key"),
             py::arg("origin_t_secs"),
             py::arg("origin_t_frac"),
             D(timed_tag_retuner, make))


        ;
}
