/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(system_time_tagger.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(6b08a248bf5f26596791f6be2f197a89)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/timing_utils/system_time_tagger.h>
// pydoc.h is automatically generated in the build directory
#include <system_time_tagger_pydoc.h>

template <typename T>
void bind_system_time_tagger_template(py::module& m, const char* classname)
{

    using system_time_tagger = ::gr::timing_utils::system_time_tagger<T>;


    py::class_<system_time_tagger,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<system_time_tagger>>(m, classname)
        .def(py::init(&gr::timing_utils::system_time_tagger<T>::make),
             py::arg("tag_interval"))
        .def("set_interval", &system_time_tagger::set_interval, py::arg("tag_interval"));
}

void bind_system_time_tagger(py::module& m)
{

    bind_system_time_tagger_template<unsigned char>(m, "system_time_tagger_b");
    bind_system_time_tagger_template<short>(m, "system_time_tagger_s");
    bind_system_time_tagger_template<float>(m, "system_time_tagger_f");
    bind_system_time_tagger_template<gr_complex>(m, "system_time_tagger_c");
}
