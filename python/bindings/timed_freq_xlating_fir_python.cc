/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(timed_freq_xlating_fir.h) */
/* BINDTOOL_HEADER_FILE_HASH(b495c930fcb09ce32f0704120c1329d2)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <timing_utils/timed_freq_xlating_fir.h>
// pydoc.h is automatically generated in the build directory
#include <timed_freq_xlating_fir_pydoc.h>

template <class I, class O, class T>
void bind_timed_freq_xlating_fir_template(py::module& m, const char* classname)
{
    using timed_freq_xlating_fir = gr::timing_utils::timed_freq_xlating_fir<I, O, T>;

    py::class_<timed_freq_xlating_fir,
               gr::sync_decimator,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<timed_freq_xlating_fir>>(m, classname)
        .def(py::init(&gr::timing_utils::timed_freq_xlating_fir<I, O, T>::make),
             py::arg("decimation"),
             py::arg("taps"),
             py::arg("center_freq"),
             py::arg("sampling_freq"),
             py::arg("tag_key") = "set_freq")

        .def("set_decim", &timed_freq_xlating_fir::set_decim, py::arg("decim"))
        .def("decim", &timed_freq_xlating_fir::decim)

        .def("set_rate", &timed_freq_xlating_fir::set_rate, py::arg("rate"))
        .def("rate", &timed_freq_xlating_fir::rate)

        .def("set_center_freq",
             &timed_freq_xlating_fir::set_center_freq,
             py::arg("center_freq"))
        .def("center_freq", &timed_freq_xlating_fir::center_freq)

        .def("set_taps", &timed_freq_xlating_fir::set_taps, py::arg("taps"))
        .def("taps", &timed_freq_xlating_fir::taps);
}


void bind_timed_freq_xlating_fir(py::module& m)
{
    bind_timed_freq_xlating_fir_template<gr_complex, gr_complex, gr_complex>(
        m, "timed_freq_xlating_fir_ccc");
    bind_timed_freq_xlating_fir_template<gr_complex, gr_complex, float>(
        m, "timed_freq_xlating_fir_ccf");
    bind_timed_freq_xlating_fir_template<float, gr_complex, gr_complex>(
        m, "timed_freq_xlating_fir_fcc");
    bind_timed_freq_xlating_fir_template<float, gr_complex, float>(
        m, "timed_freq_xlating_fir_fcf");
    bind_timed_freq_xlating_fir_template<std::int16_t, gr_complex, float>(
        m, "timed_freq_xlating_fir_scf");
    bind_timed_freq_xlating_fir_template<std::int16_t, gr_complex, gr_complex>(
        m, "timed_freq_xlating_fir_scc");
}
