/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(constants.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a40f6b682922dc41eb93cde35549042b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <timing_utils/constants.h>
// pydoc.h is automatically generated in the build directory
#include <constants_pydoc.h>

void bind_constants(py::module& m)
{


    m.def("PMTCONSTSTR__time",
          &::gr::timing_utils::PMTCONSTSTR__time,
          D(PMTCONSTSTR__time));


    m.def("PMTCONSTSTR__trig",
          &::gr::timing_utils::PMTCONSTSTR__trig,
          D(PMTCONSTSTR__trig));


    m.def("PMTCONSTSTR__set", &::gr::timing_utils::PMTCONSTSTR__set, D(PMTCONSTSTR__set));


    m.def("PMTCONSTSTR__disarm",
          &::gr::timing_utils::PMTCONSTSTR__disarm,
          D(PMTCONSTSTR__disarm));


    m.def("PMTCONSTSTR__rx_time",
          &::gr::timing_utils::PMTCONSTSTR__rx_time,
          D(PMTCONSTSTR__rx_time));


    m.def("PMTCONSTSTR__rx_rate",
          &::gr::timing_utils::PMTCONSTSTR__rx_rate,
          D(PMTCONSTSTR__rx_rate));


    m.def("PMTCONSTSTR__rx_freq",
          &::gr::timing_utils::PMTCONSTSTR__rx_freq,
          D(PMTCONSTSTR__rx_freq));


    m.def("PMTCONSTSTR__rx_sample",
          &::gr::timing_utils::PMTCONSTSTR__rx_sample,
          D(PMTCONSTSTR__rx_sample));


    m.def("PMTCONSTSTR__freq",
          &::gr::timing_utils::PMTCONSTSTR__freq,
          D(PMTCONSTSTR__freq));


    m.def("PMTCONSTSTR__wall_clock_time",
          &::gr::timing_utils::PMTCONSTSTR__wall_clock_time,
          D(PMTCONSTSTR__wall_clock_time));


    m.def("PMTCONSTSTR__pdu_out",
          &::gr::timing_utils::PMTCONSTSTR__pdu_out,
          D(PMTCONSTSTR__pdu_out));


    m.def("PMTCONSTSTR__pdu_in",
          &::gr::timing_utils::PMTCONSTSTR__pdu_in,
          D(PMTCONSTSTR__pdu_in));


    m.def("PMTCONSTSTR__trigger_time",
          &::gr::timing_utils::PMTCONSTSTR__trigger_time,
          D(PMTCONSTSTR__trigger_time));


    m.def("PMTCONSTSTR__trigger_sample",
          &::gr::timing_utils::PMTCONSTSTR__trigger_sample,
          D(PMTCONSTSTR__trigger_sample));


    m.def("PMTCONSTSTR__trigger_now",
          &::gr::timing_utils::PMTCONSTSTR__trigger_now,
          D(PMTCONSTSTR__trigger_now));


    m.def("PMTCONSTSTR__late_delta",
          &::gr::timing_utils::PMTCONSTSTR__late_delta,
          D(PMTCONSTSTR__late_delta));


    m.def("PMTCONSTSTR__command",
          &::gr::timing_utils::PMTCONSTSTR__command,
          D(PMTCONSTSTR__command));


    m.def("PMTCONSTSTR__set_freq",
          &::gr::timing_utils::PMTCONSTSTR__set_freq,
          D(PMTCONSTSTR__set_freq));


    m.def("PMTCONSTSTR__in", &::gr::timing_utils::PMTCONSTSTR__in, D(PMTCONSTSTR__in));


    m.def("PMTCONSTSTR__dsp_freq",
          &::gr::timing_utils::PMTCONSTSTR__dsp_freq,
          D(PMTCONSTSTR__dsp_freq));


    m.def("PMTCONSTSTR__START",
          &::gr::timing_utils::PMTCONSTSTR__START,
          D(PMTCONSTSTR__START));


    m.def("PMTCONSTSTR__END", &::gr::timing_utils::PMTCONSTSTR__END, D(PMTCONSTSTR__END));
}
