/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tag_uhd_offset.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a0f6332df4e93800c2e72d311cb46a57)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <timing_utils/tag_uhd_offset.h>
// pydoc.h is automatically generated in the build directory
#include <tag_uhd_offset_pydoc.h>

template <typename T>
void bind_tag_uhd_offset_template(py::module& m, const char* classname)
{

    using tag_uhd_offset = ::gr::timing_utils::tag_uhd_offset<T>;


    py::class_<tag_uhd_offset,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<tag_uhd_offset>>(m, classname)
        .def(py::init(&gr::timing_utils::tag_uhd_offset<T>::make),
             py::arg("rate"),
             py::arg("tag_interval"))
        .def("set_rate", &tag_uhd_offset::set_rate, py::arg("rate"))
        .def("set_interval", &tag_uhd_offset::set_interval, py::arg("tag_interval"))
        .def("set_key", &tag_uhd_offset::set_key, py::arg("tag_key"));
}

void bind_tag_uhd_offset(py::module& m)
{

    bind_tag_uhd_offset_template<unsigned char>(m, "tag_uhd_offset_b");
    bind_tag_uhd_offset_template<short>(m, "tag_uhd_offset_s");
    bind_tag_uhd_offset_template<float>(m, "tag_uhd_offset_f");
    bind_tag_uhd_offset_template<gr_complex>(m, "tag_uhd_offset_c");
}
