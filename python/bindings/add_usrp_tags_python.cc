/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(add_usrp_tags.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7b4ae17f58ad90cfda18934dd71ad1fc)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <timing_utils/add_usrp_tags.h>
// pydoc.h is automatically generated in the build directory
#include <add_usrp_tags_pydoc.h>

template <typename T>
void bind_add_usrp_tags_template(py::module& m, const char* classname)
{

    using add_usrp_tags = ::gr::timing_utils::add_usrp_tags<T>;

    py::class_<add_usrp_tags,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<add_usrp_tags>>(m, classname)
        .def(py::init(&gr::timing_utils::add_usrp_tags<T>::make),
             py::arg("freq"),
             py::arg("rate"),
             py::arg("epoch_int"),
             py::arg("epoch_frac"))
        .def("tag_now", &add_usrp_tags::tag_now, py::arg("dummy"))
        .def("update_tags", &add_usrp_tags::update_tags, py::arg("update"))
        .def("last_tag", &add_usrp_tags::last_tag);
}


void bind_add_usrp_tags(py::module& m)
{
    bind_add_usrp_tags_template<unsigned char>(m, "add_usrp_tags_b");
    bind_add_usrp_tags_template<short>(m, "add_usrp_tags_s");
    bind_add_usrp_tags_template<int32_t>(m, "add_usrp_tags_i");
    bind_add_usrp_tags_template<float>(m, "add_usrp_tags_f");
    bind_add_usrp_tags_template<gr_complex>(m, "add_usrp_tags_c");
}
